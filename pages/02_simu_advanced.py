import streamlit as st

# --- VÃ©rification de l'accÃ¨s ---
if "logged_in" not in st.session_state or not st.session_state["logged_in"]:
    st.warning("Vous devez Ãªtre connectÃ© pour accÃ©der Ã  cette page.")
    st.stop()

st.title("ğŸ“ˆ Simulation de PrÃªt AvancÃ©e")

st.markdown("Utilisez cet outil pour affiner votre simulation avec des paramÃ¨tres dÃ©taillÃ©s.")

# --- Formulaire d'entrÃ©e ---
st.header("ParamÃ¨tres du prÃªt")

col1, col2 = st.columns(2)

with col1:
    montant_pret = st.number_input("Montant du prÃªt (â‚¬)", min_value=1000, step=1, value=100000)
    taux_annuel = st.number_input("Taux d'intÃ©rÃªt annuel (%)", min_value=0.0, max_value=100.0,step=0.01, value=1.0)
    duree_annees = st.slider("DurÃ©e (annÃ©es)", 1, 30, 10)

with col2:
    apport = st.number_input("Apport personnel (â‚¬)", min_value=0, step=1, value=1000)
    taux_assurance = st.number_input("Taux assurance emprunteur (%)", min_value=0.0, max_value=100.0,step=0.01, value=1.0)
    type_remboursement = st.selectbox("Type de remboursement", ["MensualitÃ©s constantes", "Amortissement constant"])

# --- Calcul ---
if st.button("Lancer la simulation"):

    capital_empruntÃ© = montant_pret - apport
    nb_mensualites = duree_annees * 12
    taux_mensuel = taux_annuel / 100 / 12
    taux_assurance_mensuel = taux_assurance / 100 / 12

    if capital_empruntÃ© <= 0:
        st.error("L'apport personnel dÃ©passe ou Ã©gale le montant du prÃªt.")
        st.stop()

    if type_remboursement == "MensualitÃ©s constantes":
        if taux_mensuel > 0:
            mensualite = capital_empruntÃ© * (taux_mensuel * (1 + taux_mensuel) ** nb_mensualites) / \
                         ((1 + taux_mensuel) ** nb_mensualites - 1)
        else:
            mensualite = capital_empruntÃ© / nb_mensualites
    else:  # Amortissement constant
        amortissement_constant = capital_empruntÃ© / nb_mensualites
        mensualite = amortissement_constant + (capital_empruntÃ© * taux_mensuel)

    # Assurance mensuelle
    mensualite_assurance = capital_empruntÃ© * taux_assurance_mensuel
    mensualite_totale = mensualite + mensualite_assurance

    total_paye = mensualite_totale * nb_mensualites
    interets_totaux = total_paye - capital_empruntÃ© - (mensualite_assurance * nb_mensualites)

    # --- RÃ©sultats ---
    st.success("âœ… RÃ©sultats de la simulation")

    st.write(f"**Capital empruntÃ© :** â‚¬{capital_empruntÃ©:,.2f}")
    st.write(f"**MensualitÃ© (hors assurance) :** â‚¬{mensualite:,.2f}")
    st.write(f"**Assurance mensuelle :** â‚¬{mensualite_assurance:,.2f}")
    st.write(f"**MensualitÃ© totale :** â‚¬{mensualite_totale:,.2f}")
    st.write(f"**CoÃ»t total du crÃ©dit :** â‚¬{total_paye:,.2f}")
    st.write(f"**IntÃ©rÃªts totaux payÃ©s :** â‚¬{interets_totaux:,.2f}")

    st.subheader("ğŸ“Š RÃ©partition du coÃ»t")
    st.bar_chart({
        "Montant (â‚¬)": {
            "Capital": capital_empruntÃ©,
            "IntÃ©rÃªts": interets_totaux,
            "Assurance": mensualite_assurance * nb_mensualites
        }
    })

else:
    st.info("Remplissez les informations ci-dessus puis cliquez sur **Lancer la simulation**.")
